{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber());\n  }\n\n}\nexport class BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Eeshan Dutta/Documents/GitHub/lottery-react/node_modules/@ethersproject/abi/lib.esm/coders/bytes.js"],"names":["arrayify","hexlify","Coder","DynamicBytesCoder","constructor","type","localName","encode","writer","value","length","writeValue","writeBytes","decode","reader","readBytes","readValue","toNumber","BytesCoder","coerce","name"],"mappings":"AAAA;;AACA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,sBAAlC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,MAAMC,iBAAN,SAAgCD,KAAhC,CAAsC;AACzCE,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkB;AACzB,UAAMD,IAAN,EAAYA,IAAZ,EAAkBC,SAAlB,EAA6B,IAA7B;AACH;;AACDC,EAAAA,MAAM,CAACC,MAAD,EAASC,KAAT,EAAgB;AAClBA,IAAAA,KAAK,GAAGT,QAAQ,CAACS,KAAD,CAAhB;AACA,QAAIC,MAAM,GAAGF,MAAM,CAACG,UAAP,CAAkBF,KAAK,CAACC,MAAxB,CAAb;AACAA,IAAAA,MAAM,IAAIF,MAAM,CAACI,UAAP,CAAkBH,KAAlB,CAAV;AACA,WAAOC,MAAP;AACH;;AACDG,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOA,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACE,SAAP,GAAmBC,QAAnB,EAAjB,CAAP;AACH;;AAZwC;AAc7C,OAAO,MAAMC,UAAN,SAAyBf,iBAAzB,CAA2C;AAC9CC,EAAAA,WAAW,CAACE,SAAD,EAAY;AACnB,UAAM,OAAN,EAAeA,SAAf;AACH;;AACDO,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOA,MAAM,CAACK,MAAP,CAAc,KAAKC,IAAnB,EAAyBnB,OAAO,CAAC,MAAMY,MAAN,CAAaC,MAAb,CAAD,CAAhC,CAAP;AACH;;AAN6C","sourcesContent":["\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber());\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}